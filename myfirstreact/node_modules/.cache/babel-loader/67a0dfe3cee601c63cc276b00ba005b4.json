{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhake/Desktop/ProjectProgress/React/myfirstreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //This is when the component is defined in some other file.\n// import Car from './app.js';\n// render JSX component\n// const JSX = (\n//   <div>\n//     <h1 > Hello World < /h1>\n//     <p> Lets render this to the DOM < /p>\n//   </div>\n// );\n// ReactDOM.render(JSX, document.getElementById('root'));\n//\n// rendering stateless functional component\n// const ChildComponent = () => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>I am the child</p>\n// \t\t</div>\n// \t);\n// };\n//\n// ReactDOM.render(<ChildComponent />, document.getElementById('root'));\n//React component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>Hi, I am a Car!</h2>;\n//   }\n// }\n//constructor component:\n// class Car extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {color: \"red\"};\n//   }\n//   render() {\n//     return <h2>I am a {this.state.color} Car!</h2>;\n//   }\n// }\n//Components inside component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a Car!</h2>;\n//   }\n// }\n// class Garage extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//       <h1>Who lives in my Garage?</h1>\n//       <Car />\n//       </div>\n//     );\n//   }\n// }\n//React props\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a {this.props.model}!</h2>;\n//   }\n// }\n//If the component has a constructor in it then props should be passed through super()\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return <h2>I am a Car, a {this.props.model}!</h2>;\n//   }\n// }\n// ReactDOM.render(<Car model=\"Mustang\"/>, document.getElementById('root'));\n//passing an array using props\n// const List = (props) => {\n//   return <p>{props.tasks.join(\", \")}</p>\n// };\n//\n// class ToDo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>To Do Lists</h1>\n//         <h2>Today</h2>\n//         <List tasks={[\"Code\", \"Eat\", \"Code\"]} />\n//         <h2>Tomorrow</h2>\n//         <List tasks={[\"Code\", \"Code\", \"Eat\"]}/>\n//       </div>\n//     );\n//   }\n// };\n// ReactDOM.render(<ToDo />, document.getElementById('root'))\n//State object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color} {this.state.model}\n//           from {this.state.year}.\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n//change state object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//\n//     // this.changeColor = this.changeColor.bind(this)\n//   }\n//\n//   changeColor = () => {\n//     this.setState({color: \"blue\"});\n//   }\n//\n//   // changeColor() {\n//   //   this.setState({color: \"blue\"});\n//   // }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color} {this.state.model} from {this.state.year}.\n//         </p>\n//         <button type=\"button\" onClick={this.changeColor}>Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Car />, document.getElementById('root'));\n// Change state based on the previous state, in this case do visibility toggle\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibility: false\n    };\n    this.toggleVisibility = this.toggleVisibility.bind(this);\n  }\n\n  toggleVisibility() {\n    this.setState(state => {\n      if (state.visibility === true) {\n        return {\n          visibility: false\n        };\n      } else {\n        return {\n          visibility: true\n        };\n      }\n    });\n  }\n\n  render() {\n    if (this.state.visibility) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, \"Click Me\"), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, \"Heyy I'm visible\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, \"Click Me\"));\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(MyComponent, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 17\n  }\n}), document.getElementById('root')); //getDerivedStateFromProps\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   static getDerivedStateFromProps(props, state) {\n//     return {favoritecolor: props.favcol };\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header favcol=\"blue\"/>, document.getElementById('root'));\n//componentDidMount\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({favoritecolor: \"yellow\"})\n//     }, 1000)\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header />, document.getElementById('root'));\n//shouldComponentUpdate, storing and using user input\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   shouldComponentUpdate() {\n//     return true;\n//   }\n//   changeColor = () => {\n//     var col = document.getElementById(\"try\").value;\n//     // alert(col);\n//     this.setState({favoritecolor: col});\n//   }\n//   render() {\n//     return (\n//       <div>\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//       <button type=\"button\" onClick={this.changeColor}>Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// const enter = <input type=\"text\" id=\"try\"/>\n// ReactDOM.render(enter, document.getElementById(\"sandy\"));\n//\n// ReactDOM.render(<Header favoritecolor = \"seagreen\"/>, document.getElementById('root'));\n//Events\n// class Football extends React.Component {\n//   shoot() {\n//     alert(\"Great Shot!\");\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot}>Take the shot!</button>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Football />, document.getElementById('root'));\n//\n// class Football extends React.Component {\n//   shoot(a, b) {\n//     alert(a);\n//     alert(b.type) //b refers to the React event that triggered the function, in this case the 'click' event\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot.bind(this, \"Goal\")}>Take the shot!</button>\n//     );\n//   }\n// }\n// ReactDOM.render(<Football />, document.getElementById('root'));\n// Forms\n// class MyForm extends React.Component {\n//   hello(){\n//     var nam = document.getElementById(\"name\").value;\n//     alert(\"Hello \"+nam);\n//   }\n//\n//   render() {\n//     return (\n//       <form>\n//         <h1>Hello</h1>\n//         <p>Enter your name:</p>\n//         <input type=\"text\" id=\"name\"/>\n//         <button onClick={this.hello}>Submit</button>\n//       </form>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//Handle changes\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//conditional rendering\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     let header = '';\n//     if (this.state.username) {\n//       header = <h1>Hello {this.state.username}</h1>;\n//     } else {\n//       header = '';\n//     }\n//     return (\n//       <form>\n//       {header}\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//submitting and validating Forms\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       username: '',\n//       age: null,\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     let nam = event.target.name;\n//     let val = event.target.value;\n//     if (nam === \"age\") {\n//       if (!Number(val)) {\n//         alert(\"Your age must be a number\");\n//       }\n//     }\n//     this.setState({[nam]: val});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username} {this.state.age}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         name='username'\n//         onChange={this.myChangeHandler}\n//       />\n//       <p>Enter your age:</p>\n//       <input\n//         type='text'\n//         name='age'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//drop down menu\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mycar: 'Volvo',\n//       choice: ''\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({choice: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>You selected {this.state.choice}</h1>\n//       <select value={this.state.mycar} onChange={this.myChangeHandler}>\n//         <option value=\"Ford\">Ford</option>\n//         <option value=\"Volvo\">Volvo</option>\n//         <option value=\"Fiat\">Fiat</option>\n//       </select>\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//CSS\n// class MyHeader extends React.Component {\n//   render() {\n//     const mystyle = {\n//       color: \"white\",\n//       backgroundColor: \"DodgerBlue\",\n//       padding: \"10px\",\n//       fontFamily: \"Arial\"\n//     };\n//     return (\n//       <div>\n//       <h1 style={mystyle}>Hello Style!</h1>\n//       <p>Add a little style!</p>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyHeader />, document.getElementById('root'));","map":{"version":3,"sources":["/Users/simranbhake/Desktop/ProjectProgress/React/myfirstreact/src/index.js"],"names":["React","ReactDOM","MyComponent","Component","constructor","props","state","visibility","toggleVisibility","bind","setState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArhC,CAA0C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,gBAAgB,GAAG;AACjB,SAAKE,QAAL,CAAcJ,KAAK,IAAI;AACrB,UAAGA,KAAK,CAACC,UAAN,KAAmB,IAAtB,EAA2B;AACzB,eAAO;AAACA,UAAAA,UAAU,EAAE;AAAb,SAAP;AACD,OAFD,MAGK;AACH,eAAO;AAACA,UAAAA,UAAU,EAAE;AAAb,SAAP;AACD;AACF,KAPD;AAQD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKL,KAAL,CAAWC,UAAd,EAA0B;AACxB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAI,KAAKC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF;AAMD,KAPD,MAQK;AACH,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAI,KAAKA,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;AACF;;AAtCuC;;AA0C1CP,QAAQ,CAACU,MAAT,eAAgB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAiCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjsourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//This is when the component is defined in some other file.\n// import Car from './app.js';\n\n\n// render JSX component\n// const JSX = (\n//   <div>\n//     <h1 > Hello World < /h1>\n//     <p> Lets render this to the DOM < /p>\n//   </div>\n// );\n// ReactDOM.render(JSX, document.getElementById('root'));\n//\n\n// rendering stateless functional component\n// const ChildComponent = () => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>I am the child</p>\n// \t\t</div>\n// \t);\n// };\n//\n// ReactDOM.render(<ChildComponent />, document.getElementById('root'));\n\n\n//React component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>Hi, I am a Car!</h2>;\n//   }\n// }\n\n//constructor component:\n// class Car extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {color: \"red\"};\n//   }\n//   render() {\n//     return <h2>I am a {this.state.color} Car!</h2>;\n//   }\n// }\n\n//Components inside component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a Car!</h2>;\n//   }\n// }\n// class Garage extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//       <h1>Who lives in my Garage?</h1>\n//       <Car />\n//       </div>\n//     );\n//   }\n// }\n\n\n//React props\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a {this.props.model}!</h2>;\n//   }\n// }\n\n//If the component has a constructor in it then props should be passed through super()\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return <h2>I am a Car, a {this.props.model}!</h2>;\n//   }\n// }\n\n// ReactDOM.render(<Car model=\"Mustang\"/>, document.getElementById('root'));\n\n\n//passing an array using props\n// const List = (props) => {\n//   return <p>{props.tasks.join(\", \")}</p>\n// };\n//\n// class ToDo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>To Do Lists</h1>\n//         <h2>Today</h2>\n//         <List tasks={[\"Code\", \"Eat\", \"Code\"]} />\n//         <h2>Tomorrow</h2>\n//         <List tasks={[\"Code\", \"Code\", \"Eat\"]}/>\n//       </div>\n//     );\n//   }\n// };\n// ReactDOM.render(<ToDo />, document.getElementById('root'))\n\n\n//State object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color} {this.state.model}\n//           from {this.state.year}.\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n\n//change state object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//\n//     // this.changeColor = this.changeColor.bind(this)\n//   }\n//\n//   changeColor = () => {\n//     this.setState({color: \"blue\"});\n//   }\n//\n//   // changeColor() {\n//   //   this.setState({color: \"blue\"});\n//   // }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color} {this.state.model} from {this.state.year}.\n//         </p>\n//         <button type=\"button\" onClick={this.changeColor}>Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Car />, document.getElementById('root'));\n\n\n\n// Change state based on the previous state, in this case do visibility toggle\nclass MyComponent extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      visibility: false\n    }\n\n    this.toggleVisibility = this.toggleVisibility.bind(this)\n  }\n\n  toggleVisibility() {\n    this.setState(state => {\n      if(state.visibility===true){\n        return {visibility: false}\n      }\n      else {\n        return {visibility: true}\n      }\n    });\n  }\n\n  render() {\n    if(this.state.visibility) {\n      return (\n        <div>\n          <button onClick = {this.toggleVisibility}>Click Me</button>\n          <h1>Heyy I'm visible</h1>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <button onClick = {this.toggleVisibility}>Click Me</button>\n        </div>\n      )\n    }\n  }\n\n}\n\nReactDOM.render(<MyComponent />, document.getElementById('root'));\n\n\n\n//getDerivedStateFromProps\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   static getDerivedStateFromProps(props, state) {\n//     return {favoritecolor: props.favcol };\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header favcol=\"blue\"/>, document.getElementById('root'));\n\n//componentDidMount\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({favoritecolor: \"yellow\"})\n//     }, 1000)\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header />, document.getElementById('root'));\n\n\n//shouldComponentUpdate, storing and using user input\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   shouldComponentUpdate() {\n//     return true;\n//   }\n//   changeColor = () => {\n//     var col = document.getElementById(\"try\").value;\n//     // alert(col);\n//     this.setState({favoritecolor: col});\n//   }\n//   render() {\n//     return (\n//       <div>\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//       <button type=\"button\" onClick={this.changeColor}>Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// const enter = <input type=\"text\" id=\"try\"/>\n// ReactDOM.render(enter, document.getElementById(\"sandy\"));\n//\n// ReactDOM.render(<Header favoritecolor = \"seagreen\"/>, document.getElementById('root'));\n\n\n//Events\n// class Football extends React.Component {\n//   shoot() {\n//     alert(\"Great Shot!\");\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot}>Take the shot!</button>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Football />, document.getElementById('root'));\n\n//\n// class Football extends React.Component {\n//   shoot(a, b) {\n//     alert(a);\n//     alert(b.type) //b refers to the React event that triggered the function, in this case the 'click' event\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot.bind(this, \"Goal\")}>Take the shot!</button>\n//     );\n//   }\n// }\n// ReactDOM.render(<Football />, document.getElementById('root'));\n\n\n// Forms\n// class MyForm extends React.Component {\n//   hello(){\n//     var nam = document.getElementById(\"name\").value;\n//     alert(\"Hello \"+nam);\n//   }\n//\n//   render() {\n//     return (\n//       <form>\n//         <h1>Hello</h1>\n//         <p>Enter your name:</p>\n//         <input type=\"text\" id=\"name\"/>\n//         <button onClick={this.hello}>Submit</button>\n//       </form>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//Handle changes\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//conditional rendering\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     let header = '';\n//     if (this.state.username) {\n//       header = <h1>Hello {this.state.username}</h1>;\n//     } else {\n//       header = '';\n//     }\n//     return (\n//       <form>\n//       {header}\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//submitting and validating Forms\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       username: '',\n//       age: null,\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     let nam = event.target.name;\n//     let val = event.target.value;\n//     if (nam === \"age\") {\n//       if (!Number(val)) {\n//         alert(\"Your age must be a number\");\n//       }\n//     }\n//     this.setState({[nam]: val});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username} {this.state.age}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         name='username'\n//         onChange={this.myChangeHandler}\n//       />\n//       <p>Enter your age:</p>\n//       <input\n//         type='text'\n//         name='age'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//drop down menu\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mycar: 'Volvo',\n//       choice: ''\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({choice: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>You selected {this.state.choice}</h1>\n//       <select value={this.state.mycar} onChange={this.myChangeHandler}>\n//         <option value=\"Ford\">Ford</option>\n//         <option value=\"Volvo\">Volvo</option>\n//         <option value=\"Fiat\">Fiat</option>\n//       </select>\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//CSS\n// class MyHeader extends React.Component {\n//   render() {\n//     const mystyle = {\n//       color: \"white\",\n//       backgroundColor: \"DodgerBlue\",\n//       padding: \"10px\",\n//       fontFamily: \"Arial\"\n//     };\n//     return (\n//       <div>\n//       <h1 style={mystyle}>Hello Style!</h1>\n//       <p>Add a little style!</p>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyHeader />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}