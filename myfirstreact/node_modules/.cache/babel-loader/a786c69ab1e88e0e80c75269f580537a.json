{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhake/Desktop/ProjectProgress/React/myfirstreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //This is when the component is defined in some other file.\n// import Car from './app.js';\n// render JSX component\n// const JSX = (\n//   <div>\n//     <h1 > Hello World < /h1>\n//     <p> Lets render this to the DOM < /p>\n//   </div>\n// );\n// ReactDOM.render(JSX, document.getElementById('root'));\n//\n// rendering stateless functional component\n// const ChildComponent = () => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>I am the child</p>\n// \t\t</div>\n// \t);\n// };\n//\n// ReactDOM.render(<ChildComponent />, document.getElementById('root'));\n//React component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>Hi, I am a Car!</h2>;\n//   }\n// }\n//constructor component:\n// class Car extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {color: \"red\"};\n//   }\n//   render() {\n//     return <h2>I am a {this.state.color} Car!</h2>;\n//   }\n// }\n//Components inside component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a Car!</h2>;\n//   }\n// }\n// class Garage extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//       <h1>Who lives in my Garage?</h1>\n//       <Car />\n//       </div>\n//     );\n//   }\n// }\n//React props\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a {this.props.model}!</h2>;\n//   }\n// }\n//If the component has a constructor in it then props should be passed through super()\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return <h2>I am a Car, a {this.props.model}!</h2>;\n//   }\n// }\n// ReactDOM.render(<Car model=\"Mustang\"/>, document.getElementById('root'));\n//passing an array using props\n\nconst List = props => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }, props.tasks.join(\", \"));\n};\n\nclass ToDo extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"To Do Lists\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(List, {\n      tasks: [\"Code\", \"Eat\", \"Code\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Tomorrow\"), /*#__PURE__*/React.createElement(List, {\n      tasks: [\"Code\", \"Code\", \"Eat\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nReactDOM.render( /*#__PURE__*/React.createElement(ToDo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 17\n  }\n}), document.getElementById('root')); //State object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color} {this.state.model}\n//           from {this.state.year}.\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n//change state object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//   }\n//   changeColor = () => {\n//     this.setState({color: \"blue\"});\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color}\n//           {this.state.model}\n//           from {this.state.year}.\n//         </p>\n//         <button\n//           type=\"button\"\n//           onClick={this.changeColor}\n//         >Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Car />, document.getElementById('root'));\n//getDerivedStateFromProps\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   static getDerivedStateFromProps(props, state) {\n//     return {favoritecolor: props.favcol };\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header favcol=\"blue\"/>, document.getElementById('root'));\n//componentDidMount\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({favoritecolor: \"yellow\"})\n//     }, 1000)\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header />, document.getElementById('root'));\n//shouldComponentUpdate, storing and using user input\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   shouldComponentUpdate() {\n//     return true;\n//   }\n//   changeColor = () => {\n//     var col = document.getElementById(\"try\").value;\n//     // alert(col);\n//     this.setState({favoritecolor: col});\n//   }\n//   render() {\n//     return (\n//       <div>\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//       <button type=\"button\" onClick={this.changeColor}>Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// const enter = <input type=\"text\" id=\"try\"/>\n// ReactDOM.render(enter, document.getElementById(\"sandy\"));\n//\n// ReactDOM.render(<Header favoritecolor = \"seagreen\"/>, document.getElementById('root'));\n//Events\n// class Football extends React.Component {\n//   shoot() {\n//     alert(\"Great Shot!\");\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot}>Take the shot!</button>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Football />, document.getElementById('root'));\n//\n// class Football extends React.Component {\n//   shoot(a, b) {\n//     alert(a);\n//     alert(b.type) //b refers to the React event that triggered the function, in this case the 'click' event\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot.bind(this, \"Goal\")}>Take the shot!</button>\n//     );\n//   }\n// }\n// ReactDOM.render(<Football />, document.getElementById('root'));\n// Forms\n// class MyForm extends React.Component {\n//   hello(){\n//     var nam = document.getElementById(\"name\").value;\n//     alert(\"Hello \"+nam);\n//   }\n//\n//   render() {\n//     return (\n//       <form>\n//         <h1>Hello</h1>\n//         <p>Enter your name:</p>\n//         <input type=\"text\" id=\"name\"/>\n//         <button onClick={this.hello}>Submit</button>\n//       </form>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//Handle changes\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//conditional rendering\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     let header = '';\n//     if (this.state.username) {\n//       header = <h1>Hello {this.state.username}</h1>;\n//     } else {\n//       header = '';\n//     }\n//     return (\n//       <form>\n//       {header}\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//submitting and validating Forms\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       username: '',\n//       age: null,\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     let nam = event.target.name;\n//     let val = event.target.value;\n//     if (nam === \"age\") {\n//       if (!Number(val)) {\n//         alert(\"Your age must be a number\");\n//       }\n//     }\n//     this.setState({[nam]: val});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username} {this.state.age}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         name='username'\n//         onChange={this.myChangeHandler}\n//       />\n//       <p>Enter your age:</p>\n//       <input\n//         type='text'\n//         name='age'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//drop down menu\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mycar: 'Volvo',\n//       choice: ''\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({choice: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>You selected {this.state.choice}</h1>\n//       <select value={this.state.mycar} onChange={this.myChangeHandler}>\n//         <option value=\"Ford\">Ford</option>\n//         <option value=\"Volvo\">Volvo</option>\n//         <option value=\"Fiat\">Fiat</option>\n//       </select>\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n//CSS\n// class MyHeader extends React.Component {\n//   render() {\n//     const mystyle = {\n//       color: \"white\",\n//       backgroundColor: \"DodgerBlue\",\n//       padding: \"10px\",\n//       fontFamily: \"Arial\"\n//     };\n//     return (\n//       <div>\n//       <h1 style={mystyle}>Hello Style!</h1>\n//       <p>Add a little style!</p>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyHeader />, document.getElementById('root'));","map":{"version":3,"sources":["/Users/simranbhake/Desktop/ProjectProgress/React/myfirstreact/src/index.js"],"names":["React","ReactDOM","List","props","tasks","join","ToDo","Component","constructor","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiB,IAAjB,CAAJ,CAAP;AACD,CAFD;;AAIA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAdgC;;AAelC;AACDR,QAAQ,CAACQ,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//This is when the component is defined in some other file.\n// import Car from './app.js';\n\n\n// render JSX component\n// const JSX = (\n//   <div>\n//     <h1 > Hello World < /h1>\n//     <p> Lets render this to the DOM < /p>\n//   </div>\n// );\n// ReactDOM.render(JSX, document.getElementById('root'));\n//\n\n// rendering stateless functional component\n// const ChildComponent = () => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>I am the child</p>\n// \t\t</div>\n// \t);\n// };\n//\n// ReactDOM.render(<ChildComponent />, document.getElementById('root'));\n\n\n//React component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>Hi, I am a Car!</h2>;\n//   }\n// }\n\n//constructor component:\n// class Car extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {color: \"red\"};\n//   }\n//   render() {\n//     return <h2>I am a {this.state.color} Car!</h2>;\n//   }\n// }\n\n//Components inside component\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a Car!</h2>;\n//   }\n// }\n// class Garage extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//       <h1>Who lives in my Garage?</h1>\n//       <Car />\n//       </div>\n//     );\n//   }\n// }\n\n\n//React props\n// class Car extends React.Component {\n//   render() {\n//     return <h2>I am a {this.props.model}!</h2>;\n//   }\n// }\n\n//If the component has a constructor in it then props should be passed through super()\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return <h2>I am a Car, a {this.props.model}!</h2>;\n//   }\n// }\n\n// ReactDOM.render(<Car model=\"Mustang\"/>, document.getElementById('root'));\n\n\n//passing an array using props\nconst List = (props) => {\n  return <p>{props.tasks.join(\", \")}</p>\n};\n\nclass ToDo extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h1>To Do Lists</h1>\n        <h2>Today</h2>\n        <List tasks={[\"Code\", \"Eat\", \"Code\"]} />\n        <h2>Tomorrow</h2>\n        <List tasks={[\"Code\", \"Code\", \"Eat\"]}/>\n      </div>\n    );\n  }\n};\nReactDOM.render(<ToDo />, document.getElementById('root'))\n\n\n//State object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color} {this.state.model}\n//           from {this.state.year}.\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n\n//change state object\n// class Car extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       brand: \"Ford\",\n//       model: \"Mustang\",\n//       color: \"red\",\n//       year: 1964\n//     };\n//   }\n//   changeColor = () => {\n//     this.setState({color: \"blue\"});\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>My {this.state.brand}</h1>\n//         <p>\n//           It is a {this.state.color}\n//           {this.state.model}\n//           from {this.state.year}.\n//         </p>\n//         <button\n//           type=\"button\"\n//           onClick={this.changeColor}\n//         >Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Car />, document.getElementById('root'));\n\n\n//getDerivedStateFromProps\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   static getDerivedStateFromProps(props, state) {\n//     return {favoritecolor: props.favcol };\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header favcol=\"blue\"/>, document.getElementById('root'));\n\n//componentDidMount\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({favoritecolor: \"yellow\"})\n//     }, 1000)\n//   }\n//   render() {\n//     return (\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Header />, document.getElementById('root'));\n\n\n//shouldComponentUpdate, storing and using user input\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {favoritecolor: \"red\"};\n//   }\n//   shouldComponentUpdate() {\n//     return true;\n//   }\n//   changeColor = () => {\n//     var col = document.getElementById(\"try\").value;\n//     // alert(col);\n//     this.setState({favoritecolor: col});\n//   }\n//   render() {\n//     return (\n//       <div>\n//       <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n//       <button type=\"button\" onClick={this.changeColor}>Change color</button>\n//       </div>\n//     );\n//   }\n// }\n//\n// const enter = <input type=\"text\" id=\"try\"/>\n// ReactDOM.render(enter, document.getElementById(\"sandy\"));\n//\n// ReactDOM.render(<Header favoritecolor = \"seagreen\"/>, document.getElementById('root'));\n\n\n//Events\n// class Football extends React.Component {\n//   shoot() {\n//     alert(\"Great Shot!\");\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot}>Take the shot!</button>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<Football />, document.getElementById('root'));\n\n//\n// class Football extends React.Component {\n//   shoot(a, b) {\n//     alert(a);\n//     alert(b.type) //b refers to the React event that triggered the function, in this case the 'click' event\n//   }\n//   render() {\n//     return (\n//       <button onClick={this.shoot.bind(this, \"Goal\")}>Take the shot!</button>\n//     );\n//   }\n// }\n// ReactDOM.render(<Football />, document.getElementById('root'));\n\n\n// Forms\n// class MyForm extends React.Component {\n//   hello(){\n//     var nam = document.getElementById(\"name\").value;\n//     alert(\"Hello \"+nam);\n//   }\n//\n//   render() {\n//     return (\n//       <form>\n//         <h1>Hello</h1>\n//         <p>Enter your name:</p>\n//         <input type=\"text\" id=\"name\"/>\n//         <button onClick={this.hello}>Submit</button>\n//       </form>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//Handle changes\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//conditional rendering\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '' };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({username: event.target.value});\n//   }\n//   render() {\n//     let header = '';\n//     if (this.state.username) {\n//       header = <h1>Hello {this.state.username}</h1>;\n//     } else {\n//       header = '';\n//     }\n//     return (\n//       <form>\n//       {header}\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//submitting and validating Forms\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       username: '',\n//       age: null,\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     let nam = event.target.name;\n//     let val = event.target.value;\n//     if (nam === \"age\") {\n//       if (!Number(val)) {\n//         alert(\"Your age must be a number\");\n//       }\n//     }\n//     this.setState({[nam]: val});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>Hello {this.state.username} {this.state.age}</h1>\n//       <p>Enter your name:</p>\n//       <input\n//         type='text'\n//         name='username'\n//         onChange={this.myChangeHandler}\n//       />\n//       <p>Enter your age:</p>\n//       <input\n//         type='text'\n//         name='age'\n//         onChange={this.myChangeHandler}\n//       />\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//drop down menu\n// class MyForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mycar: 'Volvo',\n//       choice: ''\n//     };\n//   }\n//   myChangeHandler = (event) => {\n//     this.setState({choice: event.target.value});\n//   }\n//   render() {\n//     return (\n//       <form>\n//       <h1>You selected {this.state.choice}</h1>\n//       <select value={this.state.mycar} onChange={this.myChangeHandler}>\n//         <option value=\"Ford\">Ford</option>\n//         <option value=\"Volvo\">Volvo</option>\n//         <option value=\"Fiat\">Fiat</option>\n//       </select>\n//       </form>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n\n//CSS\n// class MyHeader extends React.Component {\n//   render() {\n//     const mystyle = {\n//       color: \"white\",\n//       backgroundColor: \"DodgerBlue\",\n//       padding: \"10px\",\n//       fontFamily: \"Arial\"\n//     };\n//     return (\n//       <div>\n//       <h1 style={mystyle}>Hello Style!</h1>\n//       <p>Add a little style!</p>\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(<MyHeader />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}